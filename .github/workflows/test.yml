name: 'testing'
on: # rebuild any PRs and main branch changes
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - master
      - 'releases/*'

jobs:     
  test-nofile: # make sure the action works without file option
    name: No File
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: ./
        id: tests
        with:
          settings: ${{ secrets.SETTINGS }}
          mode: 'output'
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: check output
        run: echo "${{steps.tests.outputs.inclusive_comment}}"
        
  test-nosettings: # make sure the action works without settings option
    name: No Settings
    runs-on: ubuntu-latest
    outputs: 
      test: ${{steps.tests.outputs.inclusive_comment}}}
    steps:
      - uses: actions/checkout@v2
      - uses: ./
        id: tests
        with:
          settingsjson: '.github/allconfigs.json'
          mode: 'output'
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: check output
        run: echo "${{steps.tests.outputs.inclusive_comment}}"
        
  test-output: # make sure the action works as output
    name: Outputs
    runs-on: ubuntu-latest
    outputs: 
      test: ${{steps.tests.outputs.inclusive_comment}}}
      enabled: ${{steps.tests.outputs.inclusive_enabled}}}
    steps:
      - uses: actions/checkout@v2
      - uses: ./
        id: tests
        with:
          settings: ${{ secrets.SETTINGS }}
          settingsjson: '.github/allconfigs.json'
          mode: 'output'
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: check output
        run: echo "${{steps.tests.outputs.inclusive_comment}}"

  test-env: # make sure the action works as environment
    name: Environment
    runs-on: ubuntu-latest
    needs: test-output
    steps:
      - uses: actions/checkout@v2
      - uses: ./
        with:
          settings: ${{ secrets.SETTINGS }}
          settingsjson: '.github/allconfigs.json'
          mode: 'environment'
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: check env
        run: echo "${{env.inclusive_comment}}"
      - name: check output
        run: |
          echo "${{needs.test-output.outputs.test}}"

  test-skips: # make sure the action works as output
    name: Skips
    runs-on: ubuntu-latest
    needs: test-output
    if: needs.test-output.outputs.enabled == true
    steps:
      - run: echo this did run
  test-runs: # make sure the action works as output
    name: Echos
    runs-on: ubuntu-latest
    needs: test-output
    if: needs.test-output.outputs.enabled == false
    steps:
      - run: echo this did run
